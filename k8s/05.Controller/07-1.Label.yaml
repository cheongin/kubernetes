apiVersion: apps/v1
kind: Deployment
metadata:
  name: label-dep # yaml 파일명과 일치시키도록 작업
  labels:
    app: nginx
  namespace: nginx-label # 실습 편의를 위해 NS 구분
spec:
  replicas: 1 # 동시에 실행할 POD 수량
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels: # 해당 POD의 구분자 설정
        app: nginx
        enviroment: develop
        release: beta
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80 # POD가 실행할 서비스 포트 번호
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: label-dep # yaml 파일명과 일치시키도록 작업
  labels:
    app: nginx
  namespace: nginx-label # 실습 편의를 위해 NS 구분
spec:
  replicas: 1 # 동시에 실행할 POD 수량
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels: # 해당 POD의 구분자 설정
        app: nginx
        enviroment: staging
        release: beta
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80 # POD가 실행할 서비스 포트 번호
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: label-dep # yaml 파일명과 일치시키도록 작업
  labels:
    app: nginx
  namespace: nginx-label # 실습 편의를 위해 NS 구분
spec:
  replicas: 1 # 동시에 실행할 POD 수량
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels: # 해당 POD의 구분자 설정
        app: nginx
        enviroment: operation
        release: beta
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80 # POD가 실행할 서비스 포트 번호
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-beta-service
  namespace: nginx-label # 실습 편의를 위해 NS 구분
spec:
  type: ClusterIP
  selector:
    release: beta # Deployment의 Lable 에서 release가 'beta'인 항목들을 결합
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
